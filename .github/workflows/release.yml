name: Release
on:
  push:
    tags:
    - v0.*
    - v1.*
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: CHECKOUT
      uses: actions/checkout@v4
      with:
        path: seshat
    - name: CONFIGURE OTP & ELIXIR
      uses: erlef/setup-beam@v1.16
      with:
        otp-version: 26
    - name: ASSERT VERSIONS
      id: versions
      working-directory: seshat
      run: |
        VERSION_ERLANG_MK="$(sed -ne 's/PROJECT_VERSION = \(.*\)/\1/p' Makefile)"

        if [[ "${{ github.ref_name }}" != "v$VERSION_ERLANG_MK" ]]; then
          echo "Version in Makefile ($VERSION_ERLANG_MK) does not match tag (${{ github.ref_name }})"
          exit 1
        fi

        VERSION_APP_SRC="$(erl -eval '{ok, [{application, _, AppInfo}]} = file:consult("src/seshat.app.src"), Version = proplists:get_value(vsn, AppInfo), io:fwrite(Version), halt().' -noshell)"

        if [[ "${{ github.ref_name }}" != "v$VERSION_APP_SRC" ]]; then
          echo "Version in src/seshat.app.src ($VERSION_APP_SRC) does not match tag (${{ github.ref_name }})"
          exit 1
        fi

    - name: FETCH THE SOURCE ARCHIVE
      run: |
        curl \
          -L \
          -o seshat-${{ steps.versions.outputs.version }}.tar.gz \
          https://github.com/${{ github.repository }}/archive/${{ github.ref }}.tar.gz
    - name: CREATE RELEASE
      id: create-release
      uses: ncipollo/release-action@v1.12.0
      with:
        token: ${{ secrets.REPO_SCOPED_TOKEN }}
        allowUpdates: true
        artifactErrorsFailBuild: true
        updateOnlyUnreleased: true
        generateReleaseNotes: true
        artifacts: >-
          seshat-${{ steps.versions.outputs.version }}.tar.gz
